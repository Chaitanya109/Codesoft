import json
import os

FILENAME = "tasks.json"

# Load existing tasks
def load_tasks():
    if os.path.exists(FILENAME):
        with open(FILENAME, "r") as file:
            return json.load(file)
    return []

# Save tasks
def save_tasks(tasks):
    with open(FILENAME, "w") as file:
        json.dump(tasks, file, indent=4)

# Display tasks
def show_tasks(tasks):
    if not tasks:
        print("\n📋 No tasks yet!")
        return
    print("\nYour To-Do List:")
    for i, task in enumerate(tasks, 1):
        status = "✅" if task["done"] else "❌"
        print(f"{i}. {task['task']} [{status}]")

# Add a new task
def add_task(tasks):
    new_task = input("Enter new task: ")
    tasks.append({"task": new_task, "done": False})
    save_tasks(tasks)
    print("Task added successfully ✅")

# Mark task as complete
def mark_done(tasks):
    show_tasks(tasks)
    num = int(input("Enter task number to mark done: ")) - 1
    if 0 <= num < len(tasks):
        tasks[num]["done"] = True
        save_tasks(tasks)
        print("Task marked as done ✅")

# Delete task
def delete_task(tasks):
    show_tasks(tasks)
    num = int(input("Enter task number to delete: ")) - 1
    if 0 <= num < len(tasks):
        tasks.pop(num)
        save_tasks(tasks)
        print("Task deleted 🗑️")

# Main program loop
def main():
    tasks = load_tasks()
    while True:
        print("\n--- TO-DO LIST MENU ---")
        print("1. View tasks")
        print("2. Add task")
        print("3. Mark task as done")
        print("4. Delete task")
        print("5. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            show_tasks(tasks)
        elif choice == "2":
            add_task(tasks)
        elif choice == "3":
            mark_done(tasks)
        elif choice == "4":
            delete_task(tasks)
        elif choice == "5":
            print("Goodbye! 👋")
            break
        else:
            print("Invalid option. Try again.")

if __name__ == "__main__":
    main()
